/*
 * openapi-examples API
 * 
 *
 * The version of the OpenAPI document: 1.0.0-SNAPSHOT
 * 
 *
 * This class was auto generated by openapi-jaxrs-client (https://github.com/jskov/openapi-jaxrs-client).
 * Do not edit the class manually.
 */

package mada.tests.e2e.dto.primitives.dto;

import java.util.Objects;

/**
 * Primitives
 */
@javax.annotation.Generated(value = "dk.mada.jaxrs.generator.DtoGenerator")
public class Primitives   {
  private Boolean aBoolean;

  private Byte aByte;

  private Short aShort;

  private Integer anInt;

  private Long aLong;

  private Float aFloat;

  private Double aDouble;

  private String aString;

  public Primitives aBoolean(Boolean aBoolean) {
    this.aBoolean = aBoolean;
    return this;
  }

  /**
   * Get aBoolean
   * @return aBoolean
   **/
  public Boolean getABoolean() {
    return aBoolean;
  }

  public void setABoolean(Boolean aBoolean) {
    this.aBoolean = aBoolean;
  }

  public Primitives aByte(Byte aByte) {
    this.aByte = aByte;
    return this;
  }

  /**
   * Get aByte
   * @return aByte
   **/
  public Byte getAByte() {
    return aByte;
  }

  public void setAByte(Byte aByte) {
    this.aByte = aByte;
  }

  public Primitives aShort(Short aShort) {
    this.aShort = aShort;
    return this;
  }

  /**
   * Get aShort
   * @return aShort
   **/
  public Short getAShort() {
    return aShort;
  }

  public void setAShort(Short aShort) {
    this.aShort = aShort;
  }

  public Primitives anInt(Integer anInt) {
    this.anInt = anInt;
    return this;
  }

  /**
   * Get anInt
   * @return anInt
   **/
  public Integer getAnInt() {
    return anInt;
  }

  public void setAnInt(Integer anInt) {
    this.anInt = anInt;
  }

  public Primitives aLong(Long aLong) {
    this.aLong = aLong;
    return this;
  }

  /**
   * Get aLong
   * @return aLong
   **/
  public Long getALong() {
    return aLong;
  }

  public void setALong(Long aLong) {
    this.aLong = aLong;
  }

  public Primitives aFloat(Float aFloat) {
    this.aFloat = aFloat;
    return this;
  }

  /**
   * Get aFloat
   * @return aFloat
   **/
  public Float getAFloat() {
    return aFloat;
  }

  public void setAFloat(Float aFloat) {
    this.aFloat = aFloat;
  }

  public Primitives aDouble(Double aDouble) {
    this.aDouble = aDouble;
    return this;
  }

  /**
   * Get aDouble
   * @return aDouble
   **/
  public Double getADouble() {
    return aDouble;
  }

  public void setADouble(Double aDouble) {
    this.aDouble = aDouble;
  }

  public Primitives aString(String aString) {
    this.aString = aString;
    return this;
  }

  /**
   * Get aString
   * @return aString
   **/
  public String getAString() {
    return aString;
  }

  public void setAString(String aString) {
    this.aString = aString;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Primitives other = (Primitives) o;
    return Objects.equals(this.aBoolean, other.aBoolean) &&
        Objects.equals(this.aByte, other.aByte) &&
        Objects.equals(this.aShort, other.aShort) &&
        Objects.equals(this.anInt, other.anInt) &&
        Objects.equals(this.aLong, other.aLong) &&
        Objects.equals(this.aFloat, other.aFloat) &&
        Objects.equals(this.aDouble, other.aDouble) &&
        Objects.equals(this.aString, other.aString);
  }

  @Override
  public int hashCode() {
    return Objects.hash(aBoolean, aByte, aShort, anInt, aLong, aFloat, aDouble, aString);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Primitives {\n");
    
    sb.append("    aBoolean: ").append(toIndentedString(aBoolean)).append("\n");
    sb.append("    aByte: ").append(toIndentedString(aByte)).append("\n");
    sb.append("    aShort: ").append(toIndentedString(aShort)).append("\n");
    sb.append("    anInt: ").append(toIndentedString(anInt)).append("\n");
    sb.append("    aLong: ").append(toIndentedString(aLong)).append("\n");
    sb.append("    aFloat: ").append(toIndentedString(aFloat)).append("\n");
    sb.append("    aDouble: ").append(toIndentedString(aDouble)).append("\n");
    sb.append("    aString: ").append(toIndentedString(aString)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
}

