/*
 * openapi-examples API
 * 
 *
 * The version of the OpenAPI document: 1.0.0-SNAPSHOT
 * 
 *
 * This class was auto generated by openapi-jaxrs-client (https://github.com/jskov/openapi-jaxrs-client).
 * Do not edit the class manually.
 */

package mada.tests.e2e.dto.arrays.dto;

import java.util.ArrayList;
import java.util.List;
import java.util.Objects;

/**
 * ArraysDto
 */
@javax.annotation.Generated(value = "dk.mada.jaxrs.generator.DtoGenerator")
public class ArraysDto   {
  private List<Boolean> booleans = new ArrayList<>();

  private byte[] bytes;

  private List<Short> shorts = new ArrayList<>();

  private List<Integer> ints = new ArrayList<>();

  private List<Long> longs = new ArrayList<>();

  private List<String> strings = new ArrayList<>();

  private List<Simple> refs = new ArrayList<>();

  public ArraysDto booleans(List<Boolean> booleans) {
    this.booleans = booleans;
    return this;
  }

  public ArraysDto addBooleansItem(boolean booleansItem) {
    if (this.booleans == null) {
      this.booleans = new ArrayList<>();
    }
    this.booleans.add(booleansItem);
    return this;
  }

  /**
   * Get booleans
   * @return booleans
   **/
  public List<Boolean> getBooleans() {
    return booleans;
  }

  public void setBooleans(List<Boolean> booleans) {
    this.booleans = booleans;
  }

  public ArraysDto bytes(byte[] bytes) {
    this.bytes = bytes;
    return this;
  }

  /**
   * Get bytes
   * @return bytes
   **/
  public byte[] getBytes() {
    return bytes;
  }

  public void setBytes(byte[] bytes) {
    this.bytes = bytes;
  }

  public ArraysDto shorts(List<Short> shorts) {
    this.shorts = shorts;
    return this;
  }

  public ArraysDto addShortsItem(short shortsItem) {
    if (this.shorts == null) {
      this.shorts = new ArrayList<>();
    }
    this.shorts.add(shortsItem);
    return this;
  }

  /**
   * Get shorts
   * @return shorts
   **/
  public List<Short> getShorts() {
    return shorts;
  }

  public void setShorts(List<Short> shorts) {
    this.shorts = shorts;
  }

  public ArraysDto ints(List<Integer> ints) {
    this.ints = ints;
    return this;
  }

  public ArraysDto addIntsItem(int intsItem) {
    if (this.ints == null) {
      this.ints = new ArrayList<>();
    }
    this.ints.add(intsItem);
    return this;
  }

  /**
   * Get ints
   * @return ints
   **/
  public List<Integer> getInts() {
    return ints;
  }

  public void setInts(List<Integer> ints) {
    this.ints = ints;
  }

  public ArraysDto longs(List<Long> longs) {
    this.longs = longs;
    return this;
  }

  public ArraysDto addLongsItem(long longsItem) {
    if (this.longs == null) {
      this.longs = new ArrayList<>();
    }
    this.longs.add(longsItem);
    return this;
  }

  /**
   * Get longs
   * @return longs
   **/
  public List<Long> getLongs() {
    return longs;
  }

  public void setLongs(List<Long> longs) {
    this.longs = longs;
  }

  public ArraysDto strings(List<String> strings) {
    this.strings = strings;
    return this;
  }

  public ArraysDto addStringsItem(String stringsItem) {
    if (this.strings == null) {
      this.strings = new ArrayList<>();
    }
    this.strings.add(stringsItem);
    return this;
  }

  /**
   * Get strings
   * @return strings
   **/
  public List<String> getStrings() {
    return strings;
  }

  public void setStrings(List<String> strings) {
    this.strings = strings;
  }

  public ArraysDto refs(List<Simple> refs) {
    this.refs = refs;
    return this;
  }

  public ArraysDto addRefsItem(Simple refsItem) {
    if (this.refs == null) {
      this.refs = new ArrayList<>();
    }
    this.refs.add(refsItem);
    return this;
  }

  /**
   * Get refs
   * @return refs
   **/
  public List<Simple> getRefs() {
    return refs;
  }

  public void setRefs(List<Simple> refs) {
    this.refs = refs;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ArraysDto other = (ArraysDto) o;
    return Objects.equals(this.booleans, other.booleans) &&
        Objects.equals(this.bytes, other.bytes) &&
        Objects.equals(this.shorts, other.shorts) &&
        Objects.equals(this.ints, other.ints) &&
        Objects.equals(this.longs, other.longs) &&
        Objects.equals(this.strings, other.strings) &&
        Objects.equals(this.refs, other.refs);
  }

  @Override
  public int hashCode() {
    return Objects.hash(booleans, bytes, shorts, ints, longs, strings, refs);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ArraysDto {");
    sb.append("\n    booleans: ").append(toIndentedString(booleans));
    sb.append("\n    bytes: ").append(toIndentedString(bytes));
    sb.append("\n    shorts: ").append(toIndentedString(shorts));
    sb.append("\n    ints: ").append(toIndentedString(ints));
    sb.append("\n    longs: ").append(toIndentedString(longs));
    sb.append("\n    strings: ").append(toIndentedString(strings));
    sb.append("\n    refs: ").append(toIndentedString(refs));
    sb.append("\n}");
    return sb.toString();
  }

  private String toIndentedString(Object o) {
    return Objects.toString(o).replace("\n", "\n    ");
  }
}

